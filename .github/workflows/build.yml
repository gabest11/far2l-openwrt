name: build
run-name: ðŸŒ™ Nightly build ðŸš€ ${{ github.event.client_payload.tag }}-${{ github.event.client_payload.date }}-${{ github.event.client_payload.sha }}

on:
  repository_dispatch:
    types: [build-nightly]

jobs:
  build:
    name: ${{ matrix.branch }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 8
      matrix:
        branch: [openwrt-22.03, openwrt-23.05]
        arch:
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - aarch64_generic
          - arm_arm1176jzf-s_vfp
          - arm_arm926ej-s
          - arm_cortex-a15_neon-vfpv4
          - arm_cortex-a5_vfpv4
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a7_vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_fa526
          - arm_mpcore
          - arm_xscale
          - i386_pentium-mmx
          - i386_pentium4
          - mips64_octeonplus
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_24kc_24kf
          - mipsel_74kc
          - mipsel_mips32
          - x86_64
        include:
          - branch: openwrt-21.02
            arch: mipsel_24kc
          - branch: SNAPSHOT
            arch: x86_64
        # exclude:
        #   - branch: openwrt-21.02
        #     arch: arm_cortex-a7_vfpv4
    container:
      image: openwrt/sdk:${{ matrix.arch }}-${{ matrix.branch }}
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: /builder/.ccache
          key: ccache-${{ matrix.branch }}-${{ matrix.arch }}-${{ github.event.client_payload.sha }}
          restore-keys: |
            ccache-${{ matrix.branch }}-${{ matrix.arch }}-

      - name: Build packages
        id: build
        # continue-on-error: true
        working-directory: /builder
        shell: bash
        env:
          DATE: ${{ github.event.client_payload.date }}
          SHA: ${{ github.event.client_payload.sha }}
          TAG: ${{ github.event.client_payload.tag }}
          ARCH: ${{ matrix.arch }}
          BRANCH: ${{ matrix.branch }}
          SIGN_KEY: ${{ secrets.SIGN_PRIVATE_KEY }}
        run: |
          VERSION=${TAG}+git$(date -d $DATE +%Y%m%d)
          cp -va $GITHUB_WORKSPACE/far2l package
          if [[ "${BRANCH/openwrt-}" =~ ^(21|22|23) ]]; then
            PCRE=libpcre
          else
            PCRE=libpcre2
          fi
          sed "s|@PCRE@|+$PCRE|" -i package/far2l/Makefile
          sed "s|@VERSION@|$VERSION|" -i package/far2l/Makefile
          sed "s|@GIT_DATE@|$DATE|" -i package/far2l/Makefile
          sed "s|@GIT_HASH@|$SHA|" -i package/far2l/Makefile
          sed 's|base.*\.git|base https://github.com/openwrt/openwrt.git|' -i feeds.conf.default
          sed 's|packages.*\.git|packages https://github.com/openwrt/packages.git|' -i feeds.conf.default
          ./scripts/feeds update base packages
          ./scripts/feeds install -a
          make defconfig
          make package/far2l/compile V=s -j$(nproc) CONFIG_CCACHE=1 BUILD_LOG=1
          ./staging_dir/host/bin/ccache --dir .ccache --max-size=100M --show-stats
          find ./bin/packages/*/base -type f ! -name 'far2l*.ipk' -delete
          echo "$SIGN_KEY" | base64 -d > key-build
          make package/index
          ls -1R ./bin/packages/*/base
          tar -C ./bin/packages/*/base -cvf ipk-$BRANCH-$ARCH.tar --transform "s|^\./|${BRANCH/openwrt-}/$ARCH/|" --show-transformed-names .

      - name: Compress build logs
        if: always()
        env:
          ARCH: ${{ matrix.arch }}
          BRANCH: ${{ matrix.branch }}
        run: |
          tar -cJvf logs-$BRANCH-$ARCH.tar.xz /builder/logs

      - name: Upload packages
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ipk-${{ matrix.branch }}-${{ matrix.arch }}
          path: /builder/ipk-${{ matrix.branch }}-${{ matrix.arch }}.tar
          if-no-files-found: error

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.branch }}-${{ matrix.arch }}
          path: ./**/logs-${{ matrix.branch }}-${{ matrix.arch }}.tar.xz
          # retention-days: 1

  gh-pages:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ipk-*

      - name: Prepare files to publish
        run: |
          mkdir public
          find . -name 'ipk-*.tar' -exec tar -C ./public -xvf {} \;

      - name: Deploy to GH pages
        id: deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          full_commit_message: ${{ github.event.client_payload.repo }}@${{ github.event.client_payload.sha }}
          force_orphan: true

      - name: Update version for badge
        if: steps.deploy.outcome == 'success'
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: f53cb6c1d56b0eaf40c88d607fc5fef1
          filename: far2l-openwrt.json
          label: version
          message: ${{ github.event.client_payload.tag }}-${{ github.event.client_payload.date }}-${{ github.event.client_payload.sha }}
          color: blue

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        continue-on-error: true

  release:
    name: Update release ${{ matrix.branch }}
    needs: gh-pages
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        branch: ['21.02', '22.03', '23.05']
    env:
      DATE: ${{ github.event.client_payload.date }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ipk-openwrt-${{ matrix.branch }}-*

      - name: Put ipk into zip
        id: zip
        env:
          BRANCH: ${{ matrix.branch }}
        run: |
          find . -name "ipk-openwrt-$BRANCH-*.tar" -exec tar xvf {} --wildcards '*.ipk' \;
          mkdir -p public
          find $BRANCH -mindepth 1 -type d -exec sh -c 'zip -0 ./public/far2l-$(basename {}).ipk.zip -j {} {}/*' \;

      - name: Upload release assets
        if: steps.zip.outcome == 'success'
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          tag_name: ${{ matrix.branch }}
          name: '${{ env.DATE }} for OpenWrt ${{ matrix.branch }}'
          body: |
            ${{ github.event.client_payload.url }}: ${{ github.event.client_payload.message }}
          files: |
            ./public/*.zip
